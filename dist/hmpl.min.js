(function(a,b){"object"==typeof module&&module.exports?module.exports=b():"function"==typeof define&&define.amd?define([],b):a.hmpl=a.hmpl||b()})("undefined"==typeof self?this:self,function(){return function(){"use strict";const a=a=>"object"==typeof a&&!Array.isArray(a)&&null!==a,b=a=>"[object Function]"===Object.prototype.toString.call(a),c=a=>{throw new Error(a)},d=a=>"get"!==a&&"post"!==a&&"put"!==a&&"delete"!==a&&"patch"!==a,e="TEMPLATE",f="data-",g=`${f}hmpl`,h=`${f}method`,i=`${f}status`,j=`${f}after`,k=`${f}mode`,l=()=>document,m=a=>{"string"!=typeof a&&c("Bad response");const b=new DOMParser().parseFromString(`<template>${a}</template>`,"text/html"),d=b.childNodes[0].childNodes[0].firstChild,e=d.content,f=e.querySelectorAll("script");for(let b=0;b<f.length;b++){const a=f[b];e.removeChild(a)}return d},n=(b,d,e,f,g,h)=>{const{mode:j,cache:k,redirect:l,get:n,referrerPolicy:o,credentials:p,timeout:q,headers:r,requestBody:s}=g,t={method:e.toUpperCase()};if(void 0!==p&&(t.credentials=p),void 0!==s&&(t.body=s),void 0!==j&&(t.mode=j),void 0!==k&&(t.cache=k),void 0!==l&&(t.redirect=l),void 0!==o&&(t.referrerPolicy=o),r)if(a(r)){const a=new Headers;for(const b in r){const[d,e]=b;if("string"==typeof e)try{a.set(d,e)}catch(a){throw a}else c(`Header has no string value`)}t.headers=a}else c(`The "header" property does not have a value object`);q&&(t.signal=AbortSignal.timeout(q));const u=void 0!==h,v=a=>{h.status!==a&&(h.status=a,n?.("status",a))},w=a=>{a?b.setAttribute(i,a):b.removeAttribute(i)};u?v(0):w("loading"),fetch(f,t).then(a=>(u?v(a.status):w(),a.ok||c(`Request error with code ${a.status}`),a.text())).then(a=>{const c=m(a);if(u)h.element=c,n?.("element",c);else{const a=c.content.childNodes;if(!d){const c=b.parentNode;for(let d=0;d<a.length;d++){const e=a[d];c.insertBefore(e,b)}c.removeChild(b)}else if(d.nodes){const b=[],c=d.nodes.length;for(let e=0;e<c;e++){const f=d.nodes[e];if(e==c-1)for(let c=0;c<a.length;c++){const e=a[c],g=d.parentNode.insertBefore(e,f);b.push(g)}d.parentNode.removeChild(f)}d.nodes=b}else{const c=b.parentNode,e=[];for(let d=0;d<a.length;d++){const f=a[d],g=c.insertBefore(f,b);e.push(g)}c.removeChild(b),d.nodes=e,d.parentNode=c}}}).catch(a=>{throw a})},o=(a,b,e)=>{const g=a.getAttribute(`${f}src`);if(g){const f=(a.getAttribute(h)||"GET").toLowerCase();if(d(f))c(`${h} has only GET, POST, PUT, PATCH or DELETE values`);else{const d=a.getAttribute(j);let h=a.getAttribute(k),i=(h||"all").toLowerCase();"one"!==i&&"all"!==i&&c(`${k} has only ONE or ALL values`);const m="all"===i;let o;m&&d&&(o={nodes:null,parentNode:null});const p=e?(a,b)=>n(void 0,void 0,f,g,a,b):()=>{n(a,o,f,g,{})};let q=p;if(d){const a=(a,b,c,d)=>{const e=l().querySelectorAll(b),f=m?()=>{p(c,d)}:()=>{p(c,d);for(let b=0;b<e.length;b++){const c=e[b];c.removeEventListener(a,f)}};for(let g=0;g<e.length;g++){const b=e[g];b.addEventListener(a,f)}};if(0<d.indexOf(":")){const b=d.split(":"),c=b[0],e=b.slice(1).join(":");q=(b,d)=>{a(c,e,b,d)}}else c(`${j} attribute doesn't work without EventTargets`)}else h&&c(`${k} attribute doesn't work without ${j}`);return b(q)}}else c(`The "source" attribute are not found or empty`)},p=()=>{const a=l().querySelectorAll(`[${g}]`);for(let b=0;b<a.length;b++){const d=a[b];null===d.parentNode&&c(`"parentNode" is null`),d.nodeName!==e&&c(`Other nodes, except those with the name "${e}", are not yet supported`);o(d,a=>{a()})}};return"loading"===l().readyState?l().addEventListener("DOMContentLoaded",p):p(),{createTemplate:a=>{"string"!=typeof a&&c("template was not found or the type of the passed value is not string");const d=(a=>{const b=new DOMParser().parseFromString(`<template>${a}</template>`,"text/html"),d=b.childNodes[0].childNodes[0].firstChild;1<d.content.children.length&&c("Template include only one node with type 'Element'");const f=a=>{switch(a.nodeType){case Node.ELEMENT_NODE:if("pre"===a.tagName)return;break;case Node.TEXT_NODE:if(!/\S/.test(a.textContent))return void a.remove();}for(let b=0;b<a.childNodes.length;b++)f(a.childNodes.item(b))};f(d.content.childNodes[0]);const h=d.content.firstElementChild;return(h?.nodeName!==e||null===h.getAttribute(g))&&c(`Other nodes, except those with the name "${e}" and attribute "${g}", are not yet supported`),h})(a);return o(d,a=>{return(d={})=>{const e={element:void 0,status:0};return d.get&&!b(d.get)&&c("The get property has a function value"),a(d,e),e}},!0)}}}()});